<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
  <context:annotation-config/>
  <context:property-placeholder location="classpath:/settings/default.properties"/>

  <import resource="classpath:/spring/dao/db-init-context.xml" />

  <!-- All Data Sources-in-one -->

  <!-- pick random DB name to avoid collisions in tests -->
  <bean id="test.dao.dbName" class="java.lang.Long" factory-method="toHexString">
    <constructor-arg>
      <bean class="java.lang.System" factory-method="currentTimeMillis"/>
    </constructor-arg>
  </bean>

  <bean id="test.dao.databaseFactory" class="org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory">
    <property name="databaseType" value="H2" />
    <property name="databaseName" ref="test.dao.dbName" />
    <property name="databasePopulator">
      <bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
        <property name="scripts">
          <array>
            <value>classpath:/sql/h2/book/book-schema.sql</value>
            <value>classpath:/sql/h2/book/book-fixture.sql</value>
            <value>classpath:/sql/h2/user/user-schema.sql</value>
          </array>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="dao.book.dataSource" factory-bean="test.dao.databaseFactory" factory-method="getDatabase" destroy-method="shutdown" />
  <alias alias="dao.user.dataSource" name="dao.book.dataSource" />

  <import resource="classpath:/spring/dao/dao-context.xml" />
</beans>
